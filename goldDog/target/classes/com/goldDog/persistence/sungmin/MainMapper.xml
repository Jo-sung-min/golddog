<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goldDog.persistence.sungmin.MainMapper">



	<sql id="search">
			<trim prefix="(" suffix=") and " prefixOverrides="or">
	 			<foreach item="sel" collection="selArr">
	 				<trim prefix="or" >
						<choose>
							<when test="sel=='R'.toString()">
								title like '%'||#{keyword}||'%'
							</when>
							<when test="sel=='C'.toString()">
								content like '%'||#{keyword}||'%'
							</when>
							<when test="sel=='W'.toString()">
								writer like '%'||#{keyword}||'%'
							</when>
						</choose>		 			
	 				</trim>
	 			</foreach>
	 		</trim>
		</sql>

	<!-- 
	// 맴버 ******************************************************
	// 맴버 정보 가져오기 페이징 처리 된 버젼 
	-->
		
	<!-- 맴버 여러명 가져오기 -->	
	<select id="getMember" resultType="com.goldDog.domain.MemberVO">
		select * from member 
		
		where m_no in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach> 
	</select>
	
	<!-- 맴버 한명만 가져오기 -->	
	<select id="getOneMember" resultType="com.goldDog.domain.MemberVO">
		select * from member where m_no=#{m_no} 
	</select>
	
	
	
	
	
	<!-- 
	// 훈련사 *******************************************************
	//훈련사 정보 하나 가져오기 -->
	<!-- 훈련사 한명의 정보 가져오기 -->
	<select id="getTrainer" resultType="com.goldDog.domain.TrainerVO">
		select * from trainer where t_no=#{t_no}
	</select>

	<!-- 모든 훈련사 가져오기 페이징 처리 -->
	<select id="getAllTrainer" resultType="com.goldDog.domain.TrainerVO">
	<![CDATA[ 
		select B.* from (select rownum r, A.* from 
		(select * from trainer order by t_price desc) A order by t_ravg desc) B 
		where ]]>
	 <![CDATA[  
		 r > (#{pageNum} - 1) * #{listQty} and r <= #{pageNum} * #{listQty}
	 	]]>
	</select>
	
	<!-- 모든 훈련사 가져오기 t_no 순서대로 -->
	<select id="getAllTrainerCount" resultType="int">
		select count(*) from trainer 
	</select>
	
	<!-- 판매자 추가정보 등록하기 -->
	<update id="addTinfo">
		update trainer set 
		t_self=#{t_self}, t_sel=#{t_sel}, t_license=#{t_license}, t_price=#{t_price}, t_career=#{t_career}  
		where m_no = #{m_no}
	</update>
		
	<!-- 검색한 훈련사 가져오기 페이징 처리 -->
	<select id="searchTrainer" resultType="com.goldDog.domain.TrainerVO">
		select t.* from member m, trainer t where m.m_no = t.m_no and  m.m_nick like '%'||#{keyword}||'%'
	</select>
	
	<!--정렬기능 분기처리 -->
	<select id="sortTrainer" resultType="com.goldDog.domain.TrainerVO">
		<![CDATA[ 
		select B.* from (select rownum r, A.* from 
		(select * from trainer ]]>
		<choose>
			<when test="sort=='R'.toString()">
				order by t_ravg desc
			</when>
			<when test="sort=='RH'.toString()">
				order by t_rTotal desc
			</when>
			<when test="sort=='L'.toString()">
				order by t_price 
			</when>
			<when test="sort=='H'.toString()">
				order by t_price desc
			</when>
		</choose>
		 <![CDATA[ 	 
		) A ) B where 
		 r > (#{pageNum} - 1) * #{listQty} and r <= #{pageNum} * #{listQty}
	 	]]>
	</select>
	
	<!-- 이름으로 검색한 훈련사 가져오기 페이징 처리 -->
	<select id="countSearchTrainer" resultType="int">
		select t.* from member m, trainer t where m.m_no = t.m_no and  m.m_nick like '%'||#{keyword}||'%'
	</select>
	
	
	
	
	
	
	<!-- 
	//미용사 *********************************************************-->
	
	<!-- 미용사 한명 가져오기 -->
	<select id="getHairstylist" resultType="com.goldDog.domain.HairstylistVO">
		select * from hairstylist where h_no=#{t_no}
	</select>	
	
	<!-- 모든 미용사 가져오기 -->
	<select id="getAllHairstylist" resultType="com.goldDog.domain.HairstylistVO">
		select * from hairstylist 
	</select>
	<!-- 모든 미용사 가져오기 t_no 순서대로 -->
	<select id="getAllHairstylistH_no" resultType="com.goldDog.domain.HairstylistVO">
		select * from hairstylist where h_no in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>  
	</select>
	
	
	
	
	
	
	
	
	
	
	<!-- 
	//리뷰 **********************************************************
	//훈련사한명의 리뷰 가져오기 -->
	<!-- 훈련사한명 한명의 리뷰 가져오기 -->
	<select id="getTReview" resultType="com.goldDog.domain.ReviewVO">
		select * from Review where t_no =#{t_no} 
	</select>
	
	<!-- 미용사 한명의 리뷰 가져오기 -->
	<select id="getHReview" resultType="com.goldDog.domain.ReviewVO">
		select * from Review where h_no =#{h_no} 
	</select>
	
	<!-- 훈련사 한명에 해당하는 모든 리뷰 가져오기 -->
	<select id="getAllReview" resultType="com.goldDog.domain.ReviewVO">
		select * from Review where t_no=#{t_no} 
	</select>

	<!-- 판매자 한명이 가지고 있는 리뷰 총갯수 세어주기 -->
	<select id="getReviewCount" resultType="int">
		 select count(*) from review where t_no=#{t_no}
	</select>
	<!-- 훈련사 한명의 총 리뷰 업데이트 -->
	<update id="updateRAvg">
		update trainer set t_ravg =#{ravg} ,t_Rtotal=#{total} where t_no=#{t_no} 
	</update>	
	<!-- 미용사 한명의 총 리뷰 업데이트 -->
	<update id="updateRHAvg">
		update hairstylist set h_ravg =#{ravg} ,h_Rtotal=#{total} where h_no=#{h_no}
	</update>





		
	<!-- 
	// 강아지 *******************************************************
	// 사용자 m_no 으로 사용자에게 등록된 강아지 한마리 가져오기 -->
	<!-- 사용자 한명에게 등록된 강아지 한마리 가져오기-->
	<select id="getMyDog" resultType="com.goldDog.domain.DogVO">
		 select * from dog where m_no=#{user_M_no}
	</select>
	
	<!-- d_no로강아지 한마리 가져오기-->
	<select id="getOneDog" resultType="com.goldDog.domain.DogVO">
		 select * from dog where d_no=#{d_no}
	</select>
	
	
	
	
	
	
	<!-- 
	//견적서 ********************************************************
	//회원이 협의하기 눌렀을때 견적서 만들어 주는 메서드 -->
	<!-- 견적서 넣어주는 메서드 -->
	<insert id="insertEst">
		insert into estimate(e_no, m_no_puppy, e_note, e_service, m_no_manager, e_con, p_no)
		 values(estimate_seq.nextval,#{m_no_puppy},#{e_note},#{e_service},#{m_no_manager},0,#{p_no})
	</insert>
		
	<!-- 사용자의 견적서 가져오는 메서드 -->
	<select id="getEstimate" resultType="com.goldDog.domain.EstimateVO">
		select * from estimate where M_no_puppy = #{m_no}
	</select>	
	
	<!-- m_no로 사용자의 주소 리스트 가져오기-->
	<select id="getMyAddress" resultType="com.goldDog.domain.AddressVO">
		 select * from address where m_no=#{m_no}
	</select>
	
	
	
	<!-- 
	//광고 ********************************************************-->
	<!-- 광고 4개중에 하나 업데이트 해주는 메서드-->
	<update id="addAD">
		update ad set
			ad_no = #{ad_no}, ad_img=#{ad_img} , ad_date=sysdate
			where ad_no =#{ad_no}
	</update>
	
	<!-- 광고 넘버하나받고 광고 정보 가져오는 메서드-->
	<select id="getAdName" resultType="com.goldDog.domain.ADVO">
		select * from ad where ad_no=#{a}
	</select>



	<!-- 
	//공지사항 ********************************************************-->
	<!-- 공지사항 추가-->
	<insert id="addNotice">
		insert into notice values 
		(notice_seq.nextval ,#{n_title} ,#{n_content},sysdate,0,#{n_img},#{m_id})
	</insert>
	<!-- 공지사항 모두 가져오기-->
	<select id="getAllNotice" resultType="com.goldDog.domain.NoticeVO">
		select * from notice order by n_no desc
	</select>
	<!-- 공지사항 조회수 올려주기-->
	<update id="addViewPoint">
		update notice set n_readcount = n_readcount+0.5 where n_no=#{n_no} 
	</update>	
	<!-- n_no공지사항 가져오기-->
	<select id="getNotice" resultType="com.goldDog.domain.NoticeVO">
		select * from notice where n_no= #{n_no}
	</select>
	<!-- n_no공지사항 삭제하기-->
	<delete id="deleteNotice">
		delete from notice where n_no=#{n_no}
	</delete>
	<!-- n_no공지사항 수정하기-->
	<update id="modifyNotice">
		update notice set n_title=#{n_title},n_img=#{n_img} , n_content= #{n_content},m_id=#{m_id} where n_no=#{n_no}
	</update>	


	<!-- 
	//QnA ********************************************************-->
	<!-- QnA 추가-->
	<insert id="addQnA">
		insert into QnA values 
		(qna_seq.nextval ,#{q_img}, #{q_title} ,#{q_content}, sysdate ,0,#{m_id})
	</insert>
	<!-- 공지사항 모두 가져오기-->
	<select id="getAllQnA" resultType="com.goldDog.domain.QnAVO">
		select * from QnA order by q_no desc
	</select>
	<!-- 공지사항 조회수 올려주기-->
	<update id="addQViewPoint">
		update QnA set q_readcount = q_readcount+0.5 where q_no=#{q_no} 
	</update>	
	<!-- q_no공지사항 가져오기-->
	<select id="getQnA" resultType="com.goldDog.domain.QnAVO">
		select * from QnA where q_no= #{q_no}
	</select>
	<!-- q_no공지사항 삭제하기-->
	<delete id="deleteQnA">
		delete from QnA where q_no=#{q_no}
	</delete>
	<!-- q_no공지사항 수정하기-->
	<update id="modifyQnA">
		update QnA set q_title=#{q_title}, q_img=#{q_img} , q_content= #{q_content},m_id=#{m_id} where q_no=#{q_no}
	</update>













</mapper>